@import "./variables";
@import "../../node_modules/spectre.css/src/spectre";
@import "../../node_modules/spectre.css/src/spectre-exp";
@import "./button";

body, html {
  margin: 0;
  color: $dark-color;
  background-color: $gray-color-light;
}

p {
  margin: 0;
}

.form {
  &-group, &-group:not(:last-child){
    margin-bottom: 0;
    &.border {
      text-decoration:none;
      color: $dark-color;
      padding: $unit-5;
      border-bottom: convertUnit(1) solid $gray-color-light;
    }
    &.border:nth-child(1){
      border-top: convertUnit(1) solid $gray-color-light;
    }
  }
}

h,
.h {
  &1 {
    font-size: $fontSize1;
  }
  &2 {
    font-size: $fontSize2;
  }
  &3 {
    font-size: $fontSize3;
  }
  &4 {
    font-size: $fontSize4;
  }
  &5 {
    font-size: $fontSize5;
  }
}

.text {
  font-size: $fontSize5;
  // font size
  &-sm {
    font-size: $fontSize6;
  }
  &-lg {
    font-size: $fontSize1;
  }
}

.stepbarSpace {
  padding-top: $stepBarSpace;
}
.footerSpace {
  margin-bottom: $footerSpace;
}

.section {
  &__header {
    margin-top: convertUnit(30);
    margin-bottom: convertUnit(25);
  }
  &__main {
    line-height: convertUnit(24);
    text-align: justify;
  }
  &__footer {
    position: fixed;
    width: calc(100% - #{$space * 2});
    left: $space;
    bottom: $space;
    margin: 0;
    z-index: 1;
  }
}

i.arrow {
  border: solid rgb(153,153,153);
  border-width: 0 #{convertUnit(2.5)} #{convertUnit(2.5)} 0;
  display: inline-block;
  padding: convertUnit(5.5);

  &-right {
    transform: rotate(-45deg);
  }
  &-left {
    transform: rotate(135deg);
  }
  &-up {
    transform: rotate(-135deg);
  }
  &-down {
    transform: rotate(45deg);
  }
}

.icon {
  width: 1em;
  height: 1em;
  max-width: 100%;
  background-repeat: no-repeat;
  background-size: 99%;
  background-position: center;

  &-yes { background-image: url(~@/assets/images/icon_yes.png); }
  &-no { background-image: url(~@/assets/images/icon_no.png); }
}


@supports (bottom: constant(safe-area-inset-bottom)) or (bottom: env(safe-area-inset-bottom)) {
  .wraper {
    padding-bottom: calc(convertUnit(10) + constant(safe-area-inset-bottom));
    padding-bottom: calc(convertUnit(10) + env(safe-area-inset-bottom));
  }
}